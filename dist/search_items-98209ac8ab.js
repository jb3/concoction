searchNodes=[{"doc":"Concoction is a Discord library for Elixir.","ref":"Concoction.html","title":"Concoction","type":"module"},{"doc":"API utilities for fetching information on the Discord Gateway.","ref":"Concoction.API.Gateway.html","title":"Concoction.API.Gateway","type":"module"},{"doc":"Fetch the Gateway without authentication, not returning any shard information.","ref":"Concoction.API.Gateway.html#get_gateway/0","title":"Concoction.API.Gateway.get_gateway/0","type":"function"},{"doc":"Fetch the Gateway with authentication, returning the gateway URL and shard count.","ref":"Concoction.API.Gateway.html#get_gateway_bot/0","title":"Concoction.API.Gateway.get_gateway_bot/0","type":"function"},{"doc":"Maintaining the connection to Discord and performing the first parsing of payloads before handing them down the chain.","ref":"Concoction.Gateway.Connection.html","title":"Concoction.Gateway.Connection","type":"module"},{"doc":"Returns a specification to start this module under a supervisor.See Supervisor.","ref":"Concoction.Gateway.Connection.html#child_spec/1","title":"Concoction.Gateway.Connection.child_spec/1","type":"function"},{"doc":"Start a connection to the Discord Gateway.","ref":"Concoction.Gateway.Connection.html#start_link/1","title":"Concoction.Gateway.Connection.start_link/1","type":"function"},{"doc":"Handling events coming from Discord in a nicer, parsed fashion.","ref":"Concoction.Gateway.Handler.html","title":"Concoction.Gateway.Handler","type":"module"},{"doc":"Returns a specification to start this module under a supervisor.See Supervisor.","ref":"Concoction.Gateway.Handler.html#child_spec/1","title":"Concoction.Gateway.Handler.child_spec/1","type":"function"},{"doc":"Handle parsed gateway events from the Discord gateway.","ref":"Concoction.Gateway.Handler.html#handle_event/1","title":"Concoction.Gateway.Handler.handle_event/1","type":"function"},{"doc":"","ref":"Concoction.Gateway.Handler.html#start_link/1","title":"Concoction.Gateway.Handler.start_link/1","type":"function"},{"doc":"Heartbeating with the Discord Gateway to prove we are alive.","ref":"Concoction.Gateway.Heartbeater.html","title":"Concoction.Gateway.Heartbeater","type":"module"},{"doc":"Returns a specification to start this module under a supervisor.See Supervisor.","ref":"Concoction.Gateway.Heartbeater.html#child_spec/1","title":"Concoction.Gateway.Heartbeater.child_spec/1","type":"function"},{"doc":"Start the heartbeater with the milliseconds and connection PID passed.","ref":"Concoction.Gateway.Heartbeater.html#start_link/1","title":"Concoction.Gateway.Heartbeater.start_link/1","type":"function"},{"doc":"Struct and relevant utilities for operating on structures coming to and from the Discord Gateway.","ref":"Concoction.Gateway.Payload.html","title":"Concoction.Gateway.Payload","type":"module"},{"doc":"Convert the payload into ETF ready for sending to the gateway.","ref":"Concoction.Gateway.Payload.html#to_etf/1","title":"Concoction.Gateway.Payload.to_etf/1","type":"function"},{"doc":"Event data in the payload.","ref":"Concoction.Gateway.Payload.html#t:d/0","title":"Concoction.Gateway.Payload.d/0","type":"type"},{"doc":"Event name of the payload.","ref":"Concoction.Gateway.Payload.html#t:event_name/0","title":"Concoction.Gateway.Payload.event_name/0","type":"type"},{"doc":"Opcode for the Payload.","ref":"Concoction.Gateway.Payload.html#t:op/0","title":"Concoction.Gateway.Payload.op/0","type":"type"},{"doc":"Sequence number, used for resuming sessions and heartbeats","ref":"Concoction.Gateway.Payload.html#t:s/0","title":"Concoction.Gateway.Payload.s/0","type":"type"},{"doc":"","ref":"Concoction.Gateway.Payload.html#t:t/0","title":"Concoction.Gateway.Payload.t/0","type":"type"},{"doc":"Utilities for handling commmunication with the Discord API.This will handle ratelimits, authorization &amp; user agent headers.","ref":"Concoction.HTTP.html","title":"Concoction.HTTP","type":"module"},{"doc":"Initialize the tables required in ETS for the HTTP client. This storage handles information on ratelimit buckets.","ref":"Concoction.HTTP.html#init/0","title":"Concoction.HTTP.init/0","type":"function"},{"doc":"","ref":"Concoction.HTTP.html#ratelimit_remaining/2","title":"Concoction.HTTP.ratelimit_remaining/2","type":"function"},{"doc":"Make a request to the Discord API.When a method is GET, the data parameter is passed as query-string data.For other requests it is passed as the post body.If a ratelimit is hit this function will block until the ratelimit is over.Returns the status code and JSON body or nil for requests with no response.","ref":"Concoction.HTTP.html#request/4","title":"Concoction.HTTP.request/4","type":"function"},{"doc":"The HTTP method used to make the request.","ref":"Concoction.HTTP.html#t:method/0","title":"Concoction.HTTP.method/0","type":"type"},{"doc":"Managing the processes for Concoction.","ref":"Concoction.Supervisor.html","title":"Concoction.Supervisor","type":"module"},{"doc":"Returns a specification to start this module under a supervisor.See Supervisor.","ref":"Concoction.Supervisor.html#child_spec/1","title":"Concoction.Supervisor.child_spec/1","type":"function"},{"doc":"","ref":"Concoction.Supervisor.html#start_link/1","title":"Concoction.Supervisor.start_link/1","type":"function"},{"doc":"Various utilities for Concoction.","ref":"Concoction.Utils.html","title":"Concoction.Utils","type":"module"},{"doc":"Convert all map keys to strings recursively.","ref":"Concoction.Utils.html#keys_to_strings/1","title":"Concoction.Utils.keys_to_strings/1","type":"function"},{"doc":"Concoction is a Discord library for Elixir.Documentation, installation and usage will come soon.","ref":"readme.html","title":"README","type":"extras"}]